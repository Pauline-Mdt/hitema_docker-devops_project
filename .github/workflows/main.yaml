name: GitHub Actions
run-name: ${{ github.actor }} ${{ github.event_name }} on ${{ github.head_ref || github.ref_name }}

on:
  push:
    branches: master
  pull_request:
    branches: master

jobs:
  test:

    name: Laravel tests

    if: github.actor != 'github-actions[bot]'

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: api

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: List files
        run: ls -la

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Execute Unit tests
        run: php artisan test --testsuite=Unit

  build-and-push:

    name: Build and push images on dockerhub

    needs: test

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./DockerfileLaravel
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-base-laravel_php8.1-apache:latest

  vm:

    name: Build the VM on Azure

    if: github.actor != 'github-actions[bot]'

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

#      - run: ssh-keygen -lf /etc/ssh/ssh_host_rsa_key.pub
#
#      - run: mkdir -p ~/.ssh
#
#      - run : echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
#
#      - run: touch ~/.ssh/known_hosts
#
#      - run: cat ~/.ssh/known_hosts
#
#      - name: List files
#        run: ls -la ~/.ssh

      - name: Login to Azure
        run: az login -u ${{ secrets.AZURE_RM_USERNAME }} -p ${{ secrets.AZURE_RM_PASSWORD }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var 'ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}'

      - name: Terraform Apply
        run: terraform apply -var 'ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}' -auto-approve

      - name: Set up Ansible inventory
        run: |
          ip=$(terraform-bin output vm_public_ip_address)
          username=$(terraform-bin output vm_username)
          echo $ip
          echo $username
          echo "hitema_docker-devops_vm ansible_host=$ip ansible_user=$username"
          echo "hitema_docker-devops_vm ansible_host=$ip ansible_user=$username" | tr -d '"'
          echo "hitema_docker-devops_vm ansible_host=$ip ansible_user=$username" | tr -d '"' > ../ansible/inventory

      - name: Git diff
        run: git diff

      - name: Git status
        run: git status

      - name: Commit and push updated files
        uses: EndBug/add-and-commit@v9
        with:
          add: './terraform/.terraform.lock.hcl ./terraform/terraform.tfstate ./terraform/terraform.tfstate.backup ./ansible/inventory'
          default_author: github_actions
          message: 'GitHub Actions - Update Terraform and Ansible files'

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Save Ansible SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ansible_key.pem
          chmod 600 ansible_key.pem
        working-directory: ansible

      - name: List files
        run: ls -la
        working-directory: ansible

      - name: Test Ansible connection
        run: ansible all -i inventory -m ping
        working-directory: ansible

      - name: Install Docker on VM
        env:
          ANSIBLE_HOST_KEY_CHECKING: false
        run: ansible-playbook -i inventory playbook_install_docker.yaml
        working-directory: ansible

  deploy:

    name: Deploy on the VM

    if: github.actor != 'github-actions[bot]'

    needs: [test, build-and-push, vm]

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Set up Ansible inventory
        run: |
          mkdir -p ./ansible/inventory
          echo "[vm]" > ./ansible/inventory/hosts
          echo "lg_vm ansible_host=${{ secrets.AZURE_RM_PUBLIC_IP }} ansible_user=${{ secrets.AZURE_RM_USERNAME }}" >> ./ansible/inventory/hosts

      - name: Install Docker on VM
        run: ansible-playbook -i inventory -u ${{ env.AZURE_RM_USERNAME }} playbook_install_docker.yaml
        working-directory: ansible

